# Runs a build test every time a commit is pushed to branch 'main'.

name: Test and Publish Python Package

on:
  push:
    branches: [ main ]

jobs:
  build-test:
    runs-on: ubuntu-latest
  strategy:
    max-parallel: 4
    matrix:
      db: [ sqlite, postgres, mysql ]
      python-version: [ 3.6, 3.7, 3.8 ]
      include:
        - db: postgres
          db_port: 5432
          db_engine: django.db.backends.postgresql_psycopg2
          db_user: postgres
        - db: mysql
          db_port: 3306
          db_engine: django.db.backends.mysql
          db_user: root

    services:
      postgres:
        image: postgres
        env:
          POSTGRES_USER: postgres
          POSTGRES_PASSWORD: password
          POSTGRES_DB: ddmtestdb
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
      mysql:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: ddmtestdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r test_project/requirements.txt
        pip install psycopg2 mysqlclient
    - name: Run Tests
      env:
        DB: ${{ matrix.db }}
        DB_ENGINE: ${{ matrix.db_engine }}
        DB_NAME: ddmtestdb
        DB_USER: ${{ matrix.db_user }}
        DB_PASSWORD: password
        DB_PORT: ${{ matrix.db_port }}
      run: |
        python test_project/manage.py test ddm

  deploy:
    needs: build-test
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - name: Set up Python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install build
    - name: Generate new setup.cfg
      run: bash version_bump.sh
    - name: Build package
      run: python -m build
    - name: Publish package
      uses: pypa/gh-action-pypi-publish@27b31702a0e7fc50959f5ad993c78deac1bdfc29
      with:
        user: __token__
        password: ${{ secrets.PYPI_API_TOKEN }}
