# Runs a build test every time a commit is pushed to branch 'develop'.
# Runs a build test and merges develop into main every time a tag with pattern 'v*' is pushed.

name: Test Develop

on:
  push:
    branches: [ develop ]
    tags:
      - v*

jobs:
  build-test:
    runs-on: ubuntu-latest
    strategy:
      max-parallel: 4
      matrix:
        db: [sqlite, mysql] # postgres
        python-version: [3.8, 3.10.4]
        include:
#          - db: postgres
#            db_port: 5432
#            db_engine: django.db.backends.postgresql_psycopg2
#            db_user: postgres
          - db: mysql
            db_port: 3306
            db_engine: django.db.backends.mysql
            db_user: root

    services:
#      postgres:
#        image: postgres
#        env:
#          POSTGRES_USER:  postgres
#          POSTGRES_PASSWORD: password
#          POSTGRES_DB: ddmtestdb
#        options: >-
#          --health-cmd pg_isready
#          --health-interval 10s
#          --health-timeout 5s
#          --health-retries 5
#        ports:
#          - 5432:5432
      mysql:
        image: mysql
        env:
          MYSQL_ROOT_PASSWORD: password
          MYSQL_DATABASE: ddmtestdb
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v3
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install Dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install -r test_project/requirements.txt
        pip install psycopg2 mysqlclient
    - name: Run Tests With ${{ matrix.db }}
      env:
        DB: ${{ matrix.db }}
        DB_ENGINE: ${{ matrix.db_engine }}
        DB_NAME: ddmtestdb
        DB_USER: ${{ matrix.db_user }}
        DB_PASSWORD: password
        DB_PORT: ${{ matrix.db_port }}
      run: |
        python test_project/manage.py test ddm

  merge-dev:
    needs: build-test
    if: startsWith(github.ref, 'refs/tags/v')
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: everlytic/branch-merge@1.1.2
        with:
          github_token: ${{ secrets.PERSONAL_WORKFLOW_TOKEN }}
          source_ref: 'develop'
          target_branch: 'main'
          commit_message_template: '[Automated] Merged {source_ref} into target {target_branch}'
